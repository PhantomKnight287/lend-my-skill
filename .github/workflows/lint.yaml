name: Run Lint

on:
  push:
    branches:
      - main

jobs:
  frontend_linter:
    name: Run Linter for frontend
    runs-on: ubuntu-latest

    steps:
      - name: Get Code
        uses: actions/checkout@v2

      - name: Setting Up Nodejs
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Setup Pnpm
        run: corepack enable

      - name: Install Dependencies
        run: pnpm i

      - name: Run Lint
        run: cd apps/frontend && pnpm lint

  build_docker:
    name: Build Docker Image for frontend
    runs-on: ubuntu-latest
    needs: frontend_linter
    strategy:
      matrix:
        node-version:
          - 16.x

    steps:
      - uses: actions/checkout@v1
      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USER }}
          -p ${{ secrets.DOCKER_PASS }}
      - name: Create .env file
        run: |
          touch apps/frontend/.env.production
          echo NEXT_PUBLIC_SUPABASE_STORAGE_BUCKET_URL="${{secrets.NEXT_PUBLIC_SUPABASE_STORAGE_BUCKET_URL}} > apps/frontend/.env.production"
          echo NEXT_PUBLIC_RAZORPAY_KEY="${{secrets.NEXT_PUBLIC_RAZORPAY_KEY}} > apps/frontend/.env.production"
          echo NEXT_PUBLIC_API_URL="${{secrets.NEXT_PUBLIC_API_URL}} > apps/frontend/.env.production"
          echo SECRET="${{secrets.SECRET}} > apps/frontend/.env.production"
      - name: Build Docker image
        run: docker compose -f ./.docker-compose.frontend.yml build
      - name: Publish Docker image
        run: docker push phantomknight/lms-frontend

  backend_linter:
    name: Run linter for Backend
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v2

      - name: Setting Up Nodejs
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Setup Pnpm
        run: corepack enable

      - name: Install Dependencies
        run: pnpm i

      - name: Run Lint
        run: cd apps/backend && pnpm lint
